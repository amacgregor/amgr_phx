name: Elixir CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  mix-check:
    name: Mix Check
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: "1.13.3" # Define the elixir version [required]
          otp-version: "23.3.2" # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Check Code
        run: mix check
        env:
          POSTGRES_PORT: 5432
      - name: Notify Discord about Status
        uses: sarisia/actions-status-discord@v1
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          status: ${{ job.status }}
          description: Elixir quality checks
  build:
    name: Mix Test
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
      AUTH_USER: admin
      AUTH_PASS: admin
      CI: "true"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    container:
      image: hexpm/elixir:1.13.3-erlang-23.3.2-alpine-3.15.0
    steps:
    - name: "Alpine setup"
      run: |
        apk update
        apk upgrade
        apk add --no-cache make bash zlib openssl openssh git g++ wget curl ca-certificates
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      name: "Cache Mix"
      with:
        path: ~/.mix
        key: ${{ runner.os }}-mix-${{ hashFiles('.tool-versions') }}
    - uses: actions/cache@v1
      name: "Cache Hex"
      with:
        path: ~/.hex
        key: ${{ runner.os }}-hex-${{ hashFiles('.tool-versions') }}
    - uses: actions/cache@v1
      name: "Cache Dependencies"
      with:
        path: deps
        key: ${{ runner.os }}-deps-lock-${{ hashFiles('.tool-versions') }}-${{ hashFiles('mix.lock') }}
    - name: Install Hex & Rebar
      run: |
        mix local.rebar --force
        mix local.hex --force --if-missing
    - name: Install Dependencies
      run: mix deps.get
    - name: Compile
      run: mix compile --force --warnings-as-errors
    - name: Test
      run: mix test
    - name: Check Code Coverage
      run: mix coveralls.github
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN}}
#    - name: Validate URLs
#      run: mix validate_urls
    - name: Notify Discord about Status
      uses: sarisia/actions-status-discord@v1
      if: always()
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        status: ${{ job.status }}
        description: Elixir test and code coverage
  deploy:
    name: Gigalixir Deploy
    needs: [mix-check, build] # Will only run if the test job succeeds
    if: github.ref == 'refs/heads/main' # Only run this job if it is on the main branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main # Checkout out master instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1

      - uses: mhanberg/gigalixir-action@v0.4.3
        with:
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: false  # defaults to true